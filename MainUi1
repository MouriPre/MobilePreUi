local UILibrary = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

function UILibrary.new(title, toggleConfig)
    -- Default toggle button config
    toggleConfig = toggleConfig or {}
    local toggleColors = {
        Background = toggleConfig.Background or Color3.fromRGB(40, 40, 40),
        BackgroundHover = toggleConfig.BackgroundHover or Color3.fromRGB(60, 60, 60),
        Text = toggleConfig.Text or Color3.fromRGB(255, 255, 255),
        Size = toggleConfig.Size or UDim2.new(0, 40, 0, 40),
        Position = toggleConfig.Position or UDim2.new(0, 10, 0.5, -20)
    }

    -- Remove existing GUI
    local existingGUI = game:GetService("CoreGui"):FindFirstChild(title)
    if existingGUI then
        existingGUI:Destroy()
    end

    -- Create new ScreenGUI
    local ScreenGUI = Instance.new("ScreenGui")
    ScreenGUI.Name = title
    ScreenGUI.Parent = game:GetService("CoreGui")
    ScreenGUI.ResetOnSpawn = false
    
    -- Toggle Button (Always visible)
    local ToggleButton = Instance.new("ImageButton")
    ToggleButton.Name = "ToggleButton"
    ToggleButton.Size = toggleColors.Size
    ToggleButton.Position = toggleColors.Position
    ToggleButton.BackgroundTransparency = 1
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Image = "rbxassetid://104809137040953"
    ToggleButton.Parent = ScreenGUI
    ToggleButton.AutoButtonColor = false
    ToggleButton.ZIndex = 9999

    -- Add corner radius to toggle button
    local ToggleCorner = Instance.new("UICorner")
    ToggleCorner.CornerRadius = UDim.new(0, 5)
    ToggleCorner.Parent = ToggleButton
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 400, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGUI

    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame

    -- Title
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Size = UDim2.new(1, -20, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TopBar
    
    -- Add Corner Radius
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = MainFrame
    
    -- Make corners smooth for TopBar
    local TopBarCorner = Instance.new("UICorner")
    TopBarCorner.CornerRadius = UDim.new(0, 5)
    TopBarCorner.Parent = TopBar
    
    -- Add shadow effect
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundTransparency = 1
    Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    Shadow.Size = UDim2.new(1, 47, 1, 47)
    Shadow.ZIndex = -1
    Shadow.Image = "rbxassetid://6015897843"
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.5
    Shadow.Parent = MainFrame

    -- Toggle button hover effect
    ToggleButton.MouseEnter:Connect(function()
        TweenService:Create(ToggleButton, TweenInfo.new(0.3), {ImageTransparency = 0.2}):Play()
    end)

    ToggleButton.MouseLeave:Connect(function()
        TweenService:Create(ToggleButton, TweenInfo.new(0.3), {ImageTransparency = 0}):Play()
    end)

    -- Toggle Button Functionality with animations
    local isUIVisible = true
    ToggleButton.MouseButton1Click:Connect(function()
        isUIVisible = not isUIVisible
        
        if isUIVisible then
            -- Open animation
            MainFrame.Size = UDim2.new(0, 0, 0, 300)
            MainFrame.Visible = true
            TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back), {
                Size = UDim2.new(0, 400, 0, 300)
            }):Play()
            TweenService:Create(ToggleButton, TweenInfo.new(0.3), {Rotation = 0}):Play()
        else
            -- Close animation
            TweenService:Create(MainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 0, 0, 300)
            }):Play()
            TweenService:Create(ToggleButton, TweenInfo.new(0.3), {Rotation = 180}):Play()
            wait(0.3)
            MainFrame.Visible = false
        end
    end)

    -- Make toggle button draggable
    local dragging = false
    local dragInput
    local dragStart
    local startPos

    ToggleButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = ToggleButton.Position
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            ToggleButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    ToggleButton.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    -- Method to change toggle button colors
    local gui = {}
    
    function gui.UpdateToggleColors(newConfig)
        toggleColors.Background = newConfig.Background or toggleColors.Background
        toggleColors.BackgroundHover = newConfig.BackgroundHover or toggleColors.BackgroundHover
        toggleColors.Text = newConfig.Text or toggleColors.Text
        
        ToggleButton.BackgroundColor3 = toggleColors.Background
        ToggleButton.TextColor3 = toggleColors.Text
    end

    return gui
end

return UILibrary
