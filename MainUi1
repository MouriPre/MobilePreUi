local UILibrary = {}
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

function UILibrary.new(title)
    local gui = {}
    
    -- Remove existing GUI if it exists
    local existingGUI = game:GetService("CoreGui"):FindFirstChild(title)
    if existingGUI then
        existingGUI:Destroy()
    end

    -- Create new ScreenGUI
    local ScreenGUI = Instance.new("ScreenGui")
    ScreenGUI.Name = title
    ScreenGUI.Parent = game:GetService("CoreGui")
    ScreenGUI.ResetOnSpawn = false
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 400, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Active = true
    MainFrame.Draggable = true
    MainFrame.Parent = ScreenGUI

    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 30)
    TopBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame

    -- Title
    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Name = "Title"
    TitleLabel.Size = UDim2.new(1, -60, 1, 0)
    TitleLabel.Position = UDim2.new(0, 10, 0, 0)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = title
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.TextSize = 16
    TitleLabel.Font = Enum.Font.SourceSansBold
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left
    TitleLabel.Parent = TopBar

    -- Minimize Button
    local MinimizeButton = Instance.new("TextButton")
    MinimizeButton.Name = "MinimizeButton"
    MinimizeButton.Size = UDim2.new(0, 30, 0, 30)
    MinimizeButton.Position = UDim2.new(1, -60, 0, 0)
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    MinimizeButton.BorderSizePixel = 0
    MinimizeButton.Text = "-"
    MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    MinimizeButton.TextSize = 20
    MinimizeButton.Font = Enum.Font.SourceSansBold
    MinimizeButton.Parent = TopBar

    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -30, 0, 0)
    CloseButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    CloseButton.BorderSizePixel = 0
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.TextSize = 16
    CloseButton.Font = Enum.Font.SourceSansBold
    CloseButton.Parent = TopBar
    
    -- Add Corner Radius
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 5)
    UICorner.Parent = MainFrame
    
    -- Make corners smooth for TopBar
    local TopBarCorner = Instance.new("UICorner")
    TopBarCorner.CornerRadius = UDim.new(0, 5)
    TopBarCorner.Parent = TopBar
    
    -- Add shadow effect
    local Shadow = Instance.new("ImageLabel")
    Shadow.Name = "Shadow"
    Shadow.AnchorPoint = Vector2.new(0.5, 0.5)
    Shadow.BackgroundTransparency = 1
    Shadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    Shadow.Size = UDim2.new(1, 47, 1, 47)
    Shadow.ZIndex = -1
    Shadow.Image = "rbxassetid://6015897843"
    Shadow.ImageColor3 = Color3.new(0, 0, 0)
    Shadow.ImageTransparency = 0.5
    Shadow.Parent = MainFrame

    -- Variables for UI state
    local Minimized = false
    local Hidden = false
    local OriginalSize = MainFrame.Size
    local MinimizedSize = UDim2.new(0, 400, 0, 30)

    -- Minimize/Maximize Animation
    MinimizeButton.MouseButton1Click:Connect(function()
        Minimized = not Minimized
        
        local targetSize = Minimized and MinimizedSize or OriginalSize
        local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
        
        local sizeTween = TweenService:Create(MainFrame, tweenInfo, {Size = targetSize})
        sizeTween:Play()
        
        MinimizeButton.Text = Minimized and "+" or "-"
    end)

    -- Close Button Functionality
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGUI:Destroy()
    end)

    -- Toggle UI Visibility with Right Control
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if input.KeyCode == Enum.KeyCode.RightControl then
            Hidden = not Hidden
            
            local transparency = Hidden and 1 or 0
            local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            
            local transparencyTween = TweenService:Create(MainFrame, tweenInfo, {BackgroundTransparency = transparency})
            local shadowTween = TweenService:Create(Shadow, tweenInfo, {ImageTransparency = Hidden and 1 or 0.5})
            
            transparencyTween:Play()
            shadowTween:Play()
            
            -- Make all children transparent/visible
            for _, child in ipairs(MainFrame:GetDescendants()) do
                if child:IsA("Frame") or child:IsA("TextButton") or child:IsA("TextLabel") then
                    TweenService:Create(child, tweenInfo, {BackgroundTransparency = transparency}):Play()
                    if child:IsA("TextButton") or child:IsA("TextLabel") then
                        TweenService:Create(child, tweenInfo, {TextTransparency = transparency}):Play()
                    end
                end
            end
        end
    end)

    -- Methods
    function gui.Hide()
        Hidden = true
        MainFrame.Visible = false
    end

    function gui.Show()
        Hidden = false
        MainFrame.Visible = true
    end

    function gui.Toggle()
        if Hidden then
            gui.Show()
        else
            gui.Hide()
        end
    end

    function gui.Minimize()
        if not Minimized then
            Minimized = true
            local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local sizeTween = TweenService:Create(MainFrame, tweenInfo, {Size = MinimizedSize})
            sizeTween:Play()
            MinimizeButton.Text = "+"
        end
    end

    function gui.Maximize()
        if Minimized then
            Minimized = false
            local tweenInfo = TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
            local sizeTween = TweenService:Create(MainFrame, tweenInfo, {Size = OriginalSize})
            sizeTween:Play()
            MinimizeButton.Text = "-"
        end
    end

    return gui
end

return UILibrary
